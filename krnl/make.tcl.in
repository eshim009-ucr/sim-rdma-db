if { [info exists ::env(LIBRARY_PATH)] } {
	set ::env(LIBRARY_PATH) /usr/lib/x86_64-linux-gnu:$env(LIBRARY_PATH)
} else {
	set ::env(LIBRARY_PATH) /usr/lib/x86_64-linux-gnu
}

open_project ${PROJECT_NAME}_prj

open_solution "solution1"
set_part ${FPGA_PART}
create_clock -period ${CLOCK_PERIOD} -name default

set_top ${PROJECT_NAME}

config_interface -m_axi_latency=64
config_interface -m_axi_alignment_byte_size=64
config_interface -m_axi_max_widen_bitwidth=512
config_rtl -register_reset_num=3

# Testbench / Entry Point
add_files -tb ${CMAKE_CURRENT_SOURCE_DIR}/test/main.cpp -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
# Tree Logic
add_files ${CMAKE_CURRENT_SOURCE_DIR}/hls/sm-insert.cpp -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
add_files ${CMAKE_CURRENT_SOURCE_DIR}/hls/krnl.cpp -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
add_files ${CMAKE_CURRENT_SOURCE_DIR}/core/node.c -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
add_files ${CMAKE_CURRENT_SOURCE_DIR}/core/insert.c -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
add_files ${CMAKE_CURRENT_SOURCE_DIR}/core/search.c -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
add_files ${CMAKE_CURRENT_SOURCE_DIR}/core/tree-helpers.c -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
add_files ${CMAKE_CURRENT_SOURCE_DIR}/core/insert-helpers.c -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
add_files ${CMAKE_CURRENT_SOURCE_DIR}/core/memory.c -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
add_files ${CMAKE_CURRENT_SOURCE_DIR}/core/split.c -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
add_files ${CMAKE_CURRENT_SOURCE_DIR}/hls/operations.cpp -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
add_files ${CMAKE_CURRENT_SOURCE_DIR}/hls/ramstream.cpp -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
add_files ${CMAKE_CURRENT_SOURCE_DIR}/hls/rdma.cpp -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
add_files ${CMAKE_CURRENT_SOURCE_DIR}/hls/sm-search.cpp -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
# Tests
add_files -tb ${CMAKE_CURRENT_SOURCE_DIR}/test/test-helpers.cpp -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
add_files -tb ${CMAKE_CURRENT_SOURCE_DIR}/test/insert/leaf-node.cpp -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
add_files -tb ${CMAKE_CURRENT_SOURCE_DIR}/test/insert/split-root.cpp -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
add_files -tb ${CMAKE_CURRENT_SOURCE_DIR}/test/insert/until-it-breaks.cpp -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
add_files -tb ${CMAKE_CURRENT_SOURCE_DIR}/test/search/one-internal.cpp -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"
add_files -tb ${CMAKE_CURRENT_SOURCE_DIR}/test/search/root-is-leaf.cpp -cflags "-I${CMAKE_CURRENT_BINARY_DIR} -DHLS"


# Check which command
set command [lindex $argv 2]

if {$command == "synthesis"} {
	csynth_design
	cosim_design
} elseif {$command == "csim"} {
	csim_design
} elseif {$command == "ip"} {
	export_design -format xo
} elseif {$command == "installip"} {
	file mkdir ${IPREPO_DIR}
	file copy -force ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}_prj/solution1/impl/export.xo ${IPREPO_DIR}/${PROJECT_NAME}.xo
} else {
	puts "No valid command specified. Use vivado_hls -f make.tcl <synthesis|csim|ip|installip> ."
}


exit
